var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MCParticles","category":"page"},{"location":"#MCParticles","page":"Home","title":"MCParticles","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MCParticles]","category":"page"},{"location":"#MCParticles.DynamicParticle","page":"Home","title":"MCParticles.DynamicParticle","text":"DynamicParticle{T} <: Particle{T}\n\nx Location of particle\nℓw Log weight of particle (possibly unnormalised)\nℓdens Log density function\nτ Temperature (or index) for ℓdens\ncacheℓdens Cache of log density at current temperature (or index)\n\n\n\n\n\n","category":"type"},{"location":"#MCParticles.Particle","page":"Home","title":"MCParticles.Particle","text":"Particle{T}\n\nAn abstract type with subtypes\n\nStaticParticle{T}\nDynamicParticle{T}\n\n\n\n\n\n","category":"type"},{"location":"#MCParticles.Particle-Union{Tuple{T}, Tuple{T,Real,Function,Real}, Tuple{T,Real,Function,Real,Bool}} where T","page":"Home","title":"MCParticles.Particle","text":"Particle(x::T, w::Real, ℓdens::Function, τ::Real, logweight::Bool = false) where {T<:Any}\n\nExplicit constructor for Particle with type DynamicParticle. Auto calculates cached log density cacheℓdens\n\nx Location of particle\nw Weight of particle (possibly unnormalised)\nℓdens Log density function\nτ Temperature (or index) for ℓdens\n\n– logweight Boolean. Is w on log scale? Default is false\n\n\n\n\n\n","category":"method"},{"location":"#MCParticles.Particle-Union{Tuple{T}, Tuple{T,Real}, Tuple{T,Real,Bool}} where T","page":"Home","title":"MCParticles.Particle","text":"Particle(x::T, w::Real, logweight::Bool = false) where {T<:Any}\n\nExplicit constructor for Particle with type StaticParticle.\n\nx Location of particle\nw Weight of particle (possibly unnormalised)\nlogweight Boolean. Is w on log scale? Default is false\n\n\n\n\n\n","category":"method"},{"location":"#MCParticles.StaticParticle","page":"Home","title":"MCParticles.StaticParticle","text":"StaticParticle{T} <: Particle{T}\n\nx Location of particle\nℓw Log weight of particle (possibly unnormalised)\n\n\n\n\n\n","category":"type"},{"location":"#MCParticles.mutate-Union{Tuple{T}, Tuple{DynamicParticle{T},T}, Tuple{DynamicParticle{T},T,Real}} where T","page":"Home","title":"MCParticles.mutate","text":"mutate(p::DynamicParticle{T}, x::T, τ::Real = p.τ) where {T<:Any}\n\nMutate a particle - update the location.\n\n- ```p``` Particle to update\n- ```x``` New location of particle\n- ```τ``` New temperature (or index) for ℓdens (defaults to old temperature)\n\n\n\n\n\n","category":"method"},{"location":"#MCParticles.mutate-Union{Tuple{T}, Tuple{StaticParticle{T},T}} where T","page":"Home","title":"MCParticles.mutate","text":"mutate(p::StaticParticle{T}, x::T) where {T<:Any}\n\nMutate a particle - update the location.\n\np Particle to update\nx New location of particle\n\n\n\n\n\n","category":"method"}]
}
